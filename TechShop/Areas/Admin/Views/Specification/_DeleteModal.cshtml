@model TechShop.Core.Models.Specification

<div class="modal fade" id="centeredModalDelete" tabindex="-1" role="dialog" aria-labelledby="centeredModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this item?
            </div>
            <div class="modal-footer">

                <form id="deleteForm" asp-action="DeleteConfirmed" method="post">
                    <div asp-validation-summary="All" class="text-danger"></div>
                    <input type="hidden" asp-for="Id" />
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" aria-label="Close">Cancel</button>
                    <button type="button" class="btn btn-danger" data-bs-dismiss="modal" id="confirmDeleteBtn">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        const datatableCate = $("#specificationTable");
        const _url = "/Admin/Specification/GetDataSpecification";
        let dt = null;
        console.log(datatableCate)
        function handelShowTable(url) {

            showDataTableServerSide(url, datatableCate, [
                { data: "id", visible: false },
                { data: "name", title: "Specification Name" },
                { data: "categoryName", title: "Cateogry Name" },
            ], false, true, true, (dataTableInstance) => {
                dt.destroy();
                dt = dataTableInstance
                dataTableInstance.on('click', '.delete-btn', function () {

                    const _id = $(this).data('id');
                    var _url = '@Url.Action("Delete", "Specification")/' + _id.toUpperCase();
                    console.log(_url, _id);
                    $('#deleteModalContent').load(_url, function () {
                        $(document).on('hidden.bs.modal', '.modal', function () {
                            $(this).remove();
                        });
                        $('#centeredModalDelete').modal('show');
                    });
                    console.log(dt, _id.toUpperCase());
                });
                dataTableInstance.on('click', '.edit-btn', function () {

                    const _id = $(this).data('id');
                    var _url = '@Url.Action("Edit", "Specification")/' + _id;
                    $(document).on('hidden.bs.modal', '.modal', function () {
                        $(this).remove();
                    });
                    $('#editModalContent').load(_url, function () {
                        $('#editModal').modal('show');
                    });
                    console.log(dt, _id);
                })
            });
        }
        function showDataTableServerSide(url, dataTable, columnOptions, isAddBtnDetail = true, isAddBtnEdit = true, isAddBtnDelete = true, callBack) {

            if (isAddBtnDetail == true || isAddBtnEdit == true || isAddBtnDelete == true) {
                columnOptions.push({
                    data: null,
                    orderable: false,
                    className: "text-center",
                    render: function (data, type, row) {
                        let buttons = '';
                        if (isAddBtnDetail) {
                            buttons += `<button class="btn btn-info detail-btn" data-id="${row.id}">Detail</button> `;
                        }
                        if (isAddBtnEdit) {
                            buttons += `<button class="btn btn-primary edit-btn" data-id="${row.id}">Edit</button> `;
                        }
                        if (isAddBtnDelete) {
                            buttons += `<button class="btn btn-danger delete-btn" data-id="${row.id}">Delete</button>`;
                        }
                        return buttons.trim();
                    }
                });
            }

            const dataTableInstance = dataTable.DataTable({
                processing: true,
                serverSide: true,
                destroy: true,
                select: true,
                ajax: {
                    url: url,
                    type: 'POST'
                },
                language: {
                    search: "",
                    searchPlaceholder: "Search...",
                    infoFiltered: ""
                },
                columns: columnOptions,
                lengthMenu: [5, 10, 25, 50, 100]
            });

            callBack(dataTableInstance, dataTable)
        }
        $('#confirmDeleteBtn').on('click', function (e) {
            e.preventDefault(); // Ngăn không cho form submit theo cách thông thường

            var form = $('#deleteForm');
            var url = form.attr('action');
            var data = form.serialize();

            $.ajax({
                type: 'POST',
                url: url,
                data: data,
                success: function (response) {
                    if (response.length != 0) {
                        showAlertSuccess("Delete success!");
                        handelShowTable(_url);
                    } else { showAlertError("Delete failed!") };
                },
                error: function (xhr, status, error) {
                    // Xử lý lỗi nếu có
                    console.log(xhr.responseText);
                }
            });
        });
    });
</script>
