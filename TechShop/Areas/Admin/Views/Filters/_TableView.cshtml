@model IEnumerable<TechShop.Core.Models.Filter>

<table id="filtersTable" class="table table-striped table-bordered no-wrap">
    <thead>

    </thead>
    <tbody>

    </tbody>
</table>

<script>
    $(document).ready(function () {
        const dataTable = $('#filtersTable');
        let dt = null;
        showDataTableServerSide("Filters/GetDataFilters",dataTable, [
            { data: "id", visible: false },
            { data: "name", title: "Name" },
            { data: "catename", title: "Category" }, 
            { data: "spename", title: "Specification" },
            { data: "createAt", title: "CreatedAt" },
            { data: "updatedAt", title: "UpdatedAt" }
        ], false, true, true, (dataTableInstance) => {
            dt = dataTableInstance
     
        });
        function showDataTableServerSide(url, dataTable, columnOptions, isAddBtnDetail = true, isAddBtnEdit = true, isAddBtnDelete = true, callBack) {

            if (isAddBtnDetail == true || isAddBtnEdit == true || isAddBtnDelete == true) {
                columnOptions.push({
                    data: null,
                    orderable: false,
                    className: "text-center",
                    render: function (data, type, row) {
                        let buttons = '';
                        if (isAddBtnDetail) {
                        
                            buttons += `<button class="btn btn-info detail-btn" data-id="${row.id}">Detail</button> `;
                        }
                        if (isAddBtnEdit) {
                            buttons += `<button type="button" class="btn btn-warning edit-button" data-bs-toggle="modal" data-bs-target="#editModal" data-id="${row.id}" > Edit </button>`;
                        }
                        if (isAddBtnDelete) {
                            buttons += ` <button type="button" class="btn btn-danger delete-button" data-bs-toggle="modal" data-bs-target="#centeredModalDelete" data-id="${row.id}">Delete</button>`;
                        }
                        return buttons.trim();
                    }
                });
            }

            const dataTableInstance = dataTable.DataTable({
                responsive: true,
                rowReorder: {
                    selector: 'td:nth-child(2)'
                },
                processing: true,
                serverSide: true,
                destroy: true,
                select: true,
                ajax: {
                    url: url,
                    type: 'POST'
                },
                language: {
                    search: "",
                    searchPlaceholder: "Search...",
                    infoFiltered: ""
                },
                columns: columnOptions,
                lengthMenu: [5, 10, 25, 50, 100]
            });

            callBack(dataTableInstance, dataTable)
        }

    });
  
</script>
