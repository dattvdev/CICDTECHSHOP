// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TechShop.Core.Data;

#nullable disable

namespace TechShop.Core.Migrations
{
    [DbContext(typeof(TechshopDbContext))]
    [Migration("20240926024156_DbInit")]
    partial class DbInit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "35876399-17ca-49a4-adbf-679932581012",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "2492a74d-3c9f-4a27-9e21-9783ebeb8ee1",
                            Name = "Collaborator",
                            NormalizedName = "COLLABORATOR"
                        },
                        new
                        {
                            Id = "cdad2dad-54da-4ba6-b06a-e787fd18685a",
                            Name = "Customer",
                            NormalizedName = "CUSTOMER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "bdf2f396-543a-4d69-ad81-e346218aec1e",
                            RoleId = "35876399-17ca-49a4-adbf-679932581012"
                        },
                        new
                        {
                            UserId = "e1c5db55-de77-41c1-ab45-c022d32a2034",
                            RoleId = "2492a74d-3c9f-4a27-9e21-9783ebeb8ee1"
                        },
                        new
                        {
                            UserId = "dfda172b-27f8-44d5-aef4-d029719eeab7",
                            RoleId = "2492a74d-3c9f-4a27-9e21-9783ebeb8ee1"
                        },
                        new
                        {
                            UserId = "dfd365b0-ed6c-4627-8d91-6f6488d301b1",
                            RoleId = "2492a74d-3c9f-4a27-9e21-9783ebeb8ee1"
                        },
                        new
                        {
                            UserId = "7954dd0b-fc37-488f-9f9b-cf64179fa2d9",
                            RoleId = "2492a74d-3c9f-4a27-9e21-9783ebeb8ee1"
                        },
                        new
                        {
                            UserId = "f7ab9962-24e9-43fa-b81d-af09531b6048",
                            RoleId = "cdad2dad-54da-4ba6-b06a-e787fd18685a"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("TechShop.Core.Models.Admin", b =>
                {
                    b.Property<Guid?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("AccessLevel")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            ID = new Guid("998593d3-4b26-4599-b074-e6ffbb3bc029"),
                            AccessLevel = 2,
                            UserID = "bdf2f396-543a-4d69-ad81-e346218aec1e"
                        });
                });

            modelBuilder.Entity("TechShop.Core.Models.Brand", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UrlSlug")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7a0f7330-2fe2-432d-91c1-ee96a48a8ca8"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8768),
                            Name = "Apple",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8769),
                            UrlSlug = "apple"
                        },
                        new
                        {
                            Id = new Guid("85e9a56d-fc9b-4e1f-ad68-21cca7dfb436"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8772),
                            Name = "Samsung",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8772),
                            UrlSlug = "samsung"
                        },
                        new
                        {
                            Id = new Guid("6153d1df-8e4c-4f10-ab8e-a60809573c05"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8775),
                            Name = "Sony",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8776),
                            UrlSlug = "sony"
                        },
                        new
                        {
                            Id = new Guid("48720627-137e-4089-9668-f8f3b823186a"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8778),
                            Name = "Dell",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8779),
                            UrlSlug = "dell"
                        },
                        new
                        {
                            Id = new Guid("a0afc49f-f2c1-4c04-8916-4e05b6ac7fe0"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8781),
                            Name = "HP",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8782),
                            UrlSlug = "hp"
                        },
                        new
                        {
                            Id = new Guid("efd5a997-0a4f-457a-9969-df088d01c82e"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8787),
                            Name = "Lenovo",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8787),
                            UrlSlug = "lenovo"
                        },
                        new
                        {
                            Id = new Guid("c86a7099-dea4-46b2-9017-12bc015d23e4"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8789),
                            Name = "Microsoft",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8791),
                            UrlSlug = "microsoft"
                        },
                        new
                        {
                            Id = new Guid("210eb0ed-23fd-42f8-9dd7-b00cfd19715e"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8793),
                            Name = "Asus",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8794),
                            UrlSlug = "asus"
                        },
                        new
                        {
                            Id = new Guid("ed7da3d4-b839-4c35-ae1c-663760a9794d"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8796),
                            Name = "Acer",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8797),
                            UrlSlug = "acer"
                        },
                        new
                        {
                            Id = new Guid("fe9d1df6-9f06-4436-b52f-bc821466c09a"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8800),
                            Name = "Huawei",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8801),
                            UrlSlug = "huawei"
                        });
                });

            modelBuilder.Entity("TechShop.Core.Models.Category", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UrlSlug")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6d0dfc2c-f26f-4ec4-aab7-59079e5fe7c5"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8689),
                            Name = "Phones",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8692),
                            UrlSlug = "phones"
                        },
                        new
                        {
                            Id = new Guid("80ff6f18-ea57-43f3-9b8d-226a4b002758"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8696),
                            Name = "Laptops",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8696),
                            UrlSlug = "laptops"
                        },
                        new
                        {
                            Id = new Guid("2f17b91e-1f82-4720-8f32-c972ec3c8a09"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8713),
                            Name = "Tablets",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8713),
                            UrlSlug = "tablets"
                        },
                        new
                        {
                            Id = new Guid("908d467a-84ca-4b7f-a37c-d9964bd3d788"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8720),
                            Name = "Watches",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8721),
                            UrlSlug = "watches"
                        },
                        new
                        {
                            Id = new Guid("76f25b28-3096-4a32-9a3a-5646b720015f"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8723),
                            Name = "PCs",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8735),
                            UrlSlug = "pcs"
                        },
                        new
                        {
                            Id = new Guid("ad295af0-70e4-4a63-8e37-eeb960e8998e"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8742),
                            Name = "TVs",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8743),
                            UrlSlug = "tvs"
                        },
                        new
                        {
                            Id = new Guid("09e18647-e4e5-4eb2-8b47-cf0d8802eafd"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8753),
                            Name = "Accessories",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8753),
                            UrlSlug = "accessories"
                        },
                        new
                        {
                            Id = new Guid("aff23a31-95a1-4f59-8d71-7d99aa9eb71a"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8756),
                            Name = "Audio",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8756),
                            UrlSlug = "audio"
                        },
                        new
                        {
                            Id = new Guid("dbc5b522-1516-4469-a7a1-b42e2637b3cd"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8758),
                            Name = "Cameras",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8759),
                            UrlSlug = "cameras"
                        });
                });

            modelBuilder.Entity("TechShop.Core.Models.Chat", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CollaboratorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CollaboratorId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Chats");

                    b.HasData(
                        new
                        {
                            Id = new Guid("61440a81-0cbf-4ba4-a9d8-be04f00b9109"),
                            CollaboratorId = new Guid("28e0105a-3dbe-45c1-8bdf-332755f6e704"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 979, DateTimeKind.Local).AddTicks(183),
                            CustomerId = new Guid("0f2456ef-da81-4455-9dfc-e5d6d4205849")
                        },
                        new
                        {
                            Id = new Guid("70d16e23-5df5-486e-8e68-e49aa8550a9c"),
                            CollaboratorId = new Guid("cf4d2168-28f5-489d-ab2a-61c4a9937f81"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 979, DateTimeKind.Local).AddTicks(189),
                            CustomerId = new Guid("0f2456ef-da81-4455-9dfc-e5d6d4205849")
                        });
                });

            modelBuilder.Entity("TechShop.Core.Models.Collaborator", b =>
                {
                    b.Property<Guid?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("InvoiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("InvoiceId")
                        .IsUnique()
                        .HasFilter("[InvoiceId] IS NOT NULL");

                    b.HasIndex("UserID");

                    b.ToTable("Collaborators");

                    b.HasData(
                        new
                        {
                            ID = new Guid("28e0105a-3dbe-45c1-8bdf-332755f6e704"),
                            EndDate = new DateTime(2025, 2, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8628),
                            StartDate = new DateTime(2024, 4, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8611),
                            UserID = "e1c5db55-de77-41c1-ab45-c022d32a2034"
                        },
                        new
                        {
                            ID = new Guid("cf4d2168-28f5-489d-ab2a-61c4a9937f81"),
                            EndDate = new DateTime(2025, 2, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8636),
                            StartDate = new DateTime(2024, 6, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8634),
                            UserID = "dfda172b-27f8-44d5-aef4-d029719eeab7"
                        },
                        new
                        {
                            ID = new Guid("841c0bd9-a823-4fbc-98eb-28b4c50c534b"),
                            EndDate = new DateTime(2025, 2, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8641),
                            StartDate = new DateTime(2024, 7, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8639),
                            UserID = "dfd365b0-ed6c-4627-8d91-6f6488d301b1"
                        },
                        new
                        {
                            ID = new Guid("1e4a2c6e-1051-4122-8093-de12dd13f518"),
                            EndDate = new DateTime(2025, 2, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8645),
                            StartDate = new DateTime(2024, 7, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8644),
                            UserID = "7954dd0b-fc37-488f-9f9b-cf64179fa2d9"
                        });
                });

            modelBuilder.Entity("TechShop.Core.Models.Comment", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CommentText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Rate")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("UserReplyId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.HasIndex("UserReplyId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a64613fe-8ff4-4339-8964-5ef3e36e876c"),
                            CommentText = "Good",
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9787),
                            ProductId = new Guid("99144d35-20d1-45bb-9301-d7275b874d94"),
                            Rate = 5,
                            UserId = "bdf2f396-543a-4d69-ad81-e346218aec1e"
                        },
                        new
                        {
                            Id = new Guid("68d210b6-988f-4841-8f77-7e624d87d439"),
                            CommentText = "Not good",
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9792),
                            ProductId = new Guid("495a42be-85fd-452c-abfc-55edead730af"),
                            Rate = 3,
                            UserId = "e1c5db55-de77-41c1-ab45-c022d32a2034"
                        },
                        new
                        {
                            Id = new Guid("fd08bbf6-1d51-41e6-a2fd-1ba7fe1d4807"),
                            CommentText = "Excellent value for money!",
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9801),
                            ProductId = new Guid("c91d55b2-fae9-4da6-b248-c1f6be6e439a"),
                            Rate = 5,
                            UserId = "dfda172b-27f8-44d5-aef4-d029719eeab7"
                        },
                        new
                        {
                            Id = new Guid("3fac9b73-305e-43db-91c1-bc98df10e5e4"),
                            CommentText = "Not worth the price.",
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9804),
                            ProductId = new Guid("3fd418e6-652b-45f2-9687-224b0655e437"),
                            Rate = 2,
                            UserId = "dfd365b0-ed6c-4627-8d91-6f6488d301b1"
                        },
                        new
                        {
                            Id = new Guid("602d79c7-6d77-4c8e-9fb1-64d4b128bbb7"),
                            CommentText = "Great customer service.",
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9807),
                            ProductId = new Guid("e3589f3d-78ca-4a76-9624-caf516166ddf"),
                            Rate = 4,
                            UserId = "bdf2f396-543a-4d69-ad81-e346218aec1e"
                        },
                        new
                        {
                            Id = new Guid("79ec51b2-f376-4be3-8f18-5fa0e56f6662"),
                            CommentText = "The product arrived damaged.",
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9811),
                            ProductId = new Guid("96f0fead-2b10-4c3e-b5d4-5d788dfc7628"),
                            Rate = 1,
                            UserId = "e1c5db55-de77-41c1-ab45-c022d32a2034"
                        },
                        new
                        {
                            Id = new Guid("7c3c5eab-c53d-426d-9a31-77d47e23110e"),
                            CommentText = "I agree with you!",
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9988),
                            ProductId = new Guid("99144d35-20d1-45bb-9301-d7275b874d94"),
                            Rate = 0,
                            UserId = "e1c5db55-de77-41c1-ab45-c022d32a2034",
                            UserReplyId = new Guid("a64613fe-8ff4-4339-8964-5ef3e36e876c")
                        },
                        new
                        {
                            Id = new Guid("b2dc47f0-c0c5-439e-a8ff-31508501b6a6"),
                            CommentText = "I had a different experience.",
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 979, DateTimeKind.Local).AddTicks(14),
                            ProductId = new Guid("99144d35-20d1-45bb-9301-d7275b874d94"),
                            Rate = 0,
                            UserId = "dfda172b-27f8-44d5-aef4-d029719eeab7",
                            UserReplyId = new Guid("a64613fe-8ff4-4339-8964-5ef3e36e876c")
                        },
                        new
                        {
                            Id = new Guid("7d79e633-1e45-4102-a81b-f5c6b63e82e0"),
                            CommentText = "Why do you think so?",
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 979, DateTimeKind.Local).AddTicks(22),
                            ProductId = new Guid("495a42be-85fd-452c-abfc-55edead730af"),
                            Rate = 0,
                            UserId = "bdf2f396-543a-4d69-ad81-e346218aec1e",
                            UserReplyId = new Guid("68d210b6-988f-4841-8f77-7e624d87d439")
                        },
                        new
                        {
                            Id = new Guid("34c80a15-066b-466f-bf3b-3bb932c20601"),
                            CommentText = "I had a similar issue.",
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 979, DateTimeKind.Local).AddTicks(34),
                            ProductId = new Guid("495a42be-85fd-452c-abfc-55edead730af"),
                            Rate = 0,
                            UserId = "dfda172b-27f8-44d5-aef4-d029719eeab7",
                            UserReplyId = new Guid("68d210b6-988f-4841-8f77-7e624d87d439")
                        },
                        new
                        {
                            Id = new Guid("a2f28ba7-6384-4ba3-ac3c-d42bdba79247"),
                            CommentText = "I agree, it's a great product.",
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 979, DateTimeKind.Local).AddTicks(46),
                            ProductId = new Guid("c91d55b2-fae9-4da6-b248-c1f6be6e439a"),
                            Rate = 0,
                            UserId = "dfd365b0-ed6c-4627-8d91-6f6488d301b1",
                            UserReplyId = new Guid("fd08bbf6-1d51-41e6-a2fd-1ba7fe1d4807")
                        },
                        new
                        {
                            Id = new Guid("1a3d947f-aa4c-460a-add7-7e99bf048514"),
                            CommentText = "I thought it was okay.",
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 979, DateTimeKind.Local).AddTicks(55),
                            ProductId = new Guid("3fd418e6-652b-45f2-9687-224b0655e437"),
                            Rate = 0,
                            UserId = "e1c5db55-de77-41c1-ab45-c022d32a2034",
                            UserReplyId = new Guid("3fac9b73-305e-43db-91c1-bc98df10e5e4")
                        },
                        new
                        {
                            Id = new Guid("6b8aa4ae-d356-4ac3-afe3-fab48737b6cb"),
                            CommentText = "It depends on what you're looking for.",
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 979, DateTimeKind.Local).AddTicks(69),
                            ProductId = new Guid("3fd418e6-652b-45f2-9687-224b0655e437"),
                            Rate = 0,
                            UserId = "bdf2f396-543a-4d69-ad81-e346218aec1e",
                            UserReplyId = new Guid("3fac9b73-305e-43db-91c1-bc98df10e5e4")
                        },
                        new
                        {
                            Id = new Guid("558cf74c-dd8f-4710-9176-db6a8155fcef"),
                            CommentText = "I had a different experience with the service.",
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 979, DateTimeKind.Local).AddTicks(81),
                            ProductId = new Guid("e3589f3d-78ca-4a76-9624-caf516166ddf"),
                            Rate = 0,
                            UserId = "dfda172b-27f8-44d5-aef4-d029719eeab7",
                            UserReplyId = new Guid("602d79c7-6d77-4c8e-9fb1-64d4b128bbb7")
                        },
                        new
                        {
                            Id = new Guid("7ca167e4-43f1-4f2d-bfdf-7cb4a725e494"),
                            CommentText = "They were very helpful for me too.",
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 979, DateTimeKind.Local).AddTicks(91),
                            ProductId = new Guid("e3589f3d-78ca-4a76-9624-caf516166ddf"),
                            Rate = 0,
                            UserId = "dfd365b0-ed6c-4627-8d91-6f6488d301b1",
                            UserReplyId = new Guid("602d79c7-6d77-4c8e-9fb1-64d4b128bbb7")
                        },
                        new
                        {
                            Id = new Guid("a27ff99b-64fd-4e94-810c-658ddce8a56f"),
                            CommentText = "Did you contact support?",
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 979, DateTimeKind.Local).AddTicks(102),
                            ProductId = new Guid("96f0fead-2b10-4c3e-b5d4-5d788dfc7628"),
                            Rate = 0,
                            UserId = "bdf2f396-543a-4d69-ad81-e346218aec1e",
                            UserReplyId = new Guid("79ec51b2-f376-4be3-8f18-5fa0e56f6662")
                        },
                        new
                        {
                            Id = new Guid("dc03242a-20e3-407f-b46a-d94941199f1f"),
                            CommentText = "I had the same issue. They sent a replacement quickly.",
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 979, DateTimeKind.Local).AddTicks(126),
                            ProductId = new Guid("96f0fead-2b10-4c3e-b5d4-5d788dfc7628"),
                            Rate = 0,
                            UserId = "dfd365b0-ed6c-4627-8d91-6f6488d301b1",
                            UserReplyId = new Guid("79ec51b2-f376-4be3-8f18-5fa0e56f6662")
                        });
                });

            modelBuilder.Entity("TechShop.Core.Models.Customer", b =>
                {
                    b.Property<Guid?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LoyaltyPoints")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            ID = new Guid("0f2456ef-da81-4455-9dfc-e5d6d4205849"),
                            LoyaltyPoints = 150,
                            UserID = "f7ab9962-24e9-43fa-b81d-af09531b6048"
                        });
                });

            modelBuilder.Entity("TechShop.Core.Models.Filter", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("SpecificationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SpecificationId");

                    b.ToTable("Filters");

                    b.HasData(
                        new
                        {
                            Id = new Guid("67507f8c-2351-48b7-b07e-6b50b69fb7db"),
                            CategoryId = new Guid("6d0dfc2c-f26f-4ec4-aab7-59079e5fe7c5"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9660),
                            Name = "4GB RAM",
                            SpecificationId = new Guid("140cb12c-ba27-4e99-8d60-319711f1ecf1"),
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9660)
                        },
                        new
                        {
                            Id = new Guid("894f8507-cf37-4d63-9c16-993b543654a6"),
                            CategoryId = new Guid("6d0dfc2c-f26f-4ec4-aab7-59079e5fe7c5"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9664),
                            Name = "128GB Storage",
                            SpecificationId = new Guid("140cb12c-ba27-4e99-8d60-319711f1ecf1"),
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9664)
                        },
                        new
                        {
                            Id = new Guid("90abdddb-d6a9-414f-b40d-70e1756a0b83"),
                            CategoryId = new Guid("80ff6f18-ea57-43f3-9b8d-226a4b002758"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9667),
                            Name = "8GB RAM",
                            SpecificationId = new Guid("140cb12c-ba27-4e99-8d60-319711f1ecf1"),
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9668)
                        },
                        new
                        {
                            Id = new Guid("fa45c0be-014d-4e41-bbd4-4fc7bec97358"),
                            CategoryId = new Guid("80ff6f18-ea57-43f3-9b8d-226a4b002758"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9673),
                            Name = "256GB Storage",
                            SpecificationId = new Guid("140cb12c-ba27-4e99-8d60-319711f1ecf1"),
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9674)
                        },
                        new
                        {
                            Id = new Guid("54794ede-52fb-46fb-b35f-9285d51338eb"),
                            CategoryId = new Guid("2f17b91e-1f82-4720-8f32-c972ec3c8a09"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9677),
                            Name = "OLED Display",
                            SpecificationId = new Guid("140cb12c-ba27-4e99-8d60-319711f1ecf1"),
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9677)
                        },
                        new
                        {
                            Id = new Guid("a94775da-e452-4270-9a05-537f103cd70b"),
                            CategoryId = new Guid("2f17b91e-1f82-4720-8f32-c972ec3c8a09"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9680),
                            Name = "5G Connectivity",
                            SpecificationId = new Guid("140cb12c-ba27-4e99-8d60-319711f1ecf1"),
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9681)
                        },
                        new
                        {
                            Id = new Guid("3c4265fb-955d-4e2d-9d7f-2f40ca0164ff"),
                            CategoryId = new Guid("908d467a-84ca-4b7f-a37c-d9964bd3d788"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9684),
                            Name = "Water Resistant",
                            SpecificationId = new Guid("140cb12c-ba27-4e99-8d60-319711f1ecf1"),
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9685)
                        },
                        new
                        {
                            Id = new Guid("5a6e4e4e-f8ce-46f7-b5e2-7e8968ce43ed"),
                            CategoryId = new Guid("908d467a-84ca-4b7f-a37c-d9964bd3d788"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9687),
                            Name = "Heart Rate Monitor",
                            SpecificationId = new Guid("140cb12c-ba27-4e99-8d60-319711f1ecf1"),
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9688)
                        },
                        new
                        {
                            Id = new Guid("37d35afd-167d-4be2-915d-80074b52c4b8"),
                            CategoryId = new Guid("ad295af0-70e4-4a63-8e37-eeb960e8998e"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9692),
                            Name = "4K UHD",
                            SpecificationId = new Guid("140cb12c-ba27-4e99-8d60-319711f1ecf1"),
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9693)
                        });
                });

            modelBuilder.Entity("TechShop.Core.Models.Invoice", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CollaboratorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MethodPaymment")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Total")
                        .HasColumnType("float");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("invoices");

                    b.HasData(
                        new
                        {
                            Id = new Guid("31414b0c-3bbe-4554-8486-0ac395122e64"),
                            Address = "New York, USA",
                            CollaboratorId = new Guid("28e0105a-3dbe-45c1-8bdf-332755f6e704"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9590),
                            CustomerId = new Guid("0f2456ef-da81-4455-9dfc-e5d6d4205849"),
                            MethodPaymment = "Credit Card",
                            Name = "John Doe",
                            Status = 1,
                            Telephone = "123456789"
                        },
                        new
                        {
                            Id = new Guid("e93998d4-4f87-4e31-905d-78d701c39974"),
                            Address = "Los Angeles, USA",
                            CollaboratorId = new Guid("28e0105a-3dbe-45c1-8bdf-332755f6e704"),
                            CreatedAt = new DateTime(2024, 9, 21, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9597),
                            CustomerId = new Guid("0f2456ef-da81-4455-9dfc-e5d6d4205849"),
                            MethodPaymment = "PayPal",
                            Name = "Jane Doe",
                            Status = 2,
                            Telephone = "987654321"
                        },
                        new
                        {
                            Id = new Guid("1128508f-956a-4d0d-bd29-563ced37221e"),
                            Address = "San Francisco, USA",
                            CollaboratorId = new Guid("28e0105a-3dbe-45c1-8bdf-332755f6e704"),
                            CreatedAt = new DateTime(2024, 9, 16, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9607),
                            CustomerId = new Guid("0f2456ef-da81-4455-9dfc-e5d6d4205849"),
                            MethodPaymment = "Bank Transfer",
                            Name = "John Doe",
                            Status = 3,
                            Telephone = "123456789"
                        });
                });

            modelBuilder.Entity("TechShop.Core.Models.InvoiceProductColors", b =>
                {
                    b.Property<Guid?>("InvoiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProductColorsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<double?>("ProductPrice")
                        .HasColumnType("float");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("InvoiceId", "ProductColorsId");

                    b.HasIndex("ProductColorsId");

                    b.ToTable("InvoiceProducts");

                    b.HasData(
                        new
                        {
                            InvoiceId = new Guid("31414b0c-3bbe-4554-8486-0ac395122e64"),
                            ProductColorsId = new Guid("a7183b5b-3fb8-4319-a450-2ef9846f0800"),
                            ProductPrice = 999.99000000000001,
                            Quantity = 1
                        },
                        new
                        {
                            InvoiceId = new Guid("31414b0c-3bbe-4554-8486-0ac395122e64"),
                            ProductColorsId = new Guid("55341dcd-b668-4f86-9f20-fa976e086e7d"),
                            ProductPrice = 799.99000000000001,
                            Quantity = 2
                        },
                        new
                        {
                            InvoiceId = new Guid("e93998d4-4f87-4e31-905d-78d701c39974"),
                            ProductColorsId = new Guid("1e414639-10d2-4acc-a8ff-f6899551cdbf"),
                            ProductPrice = 849.99000000000001,
                            Quantity = 1
                        },
                        new
                        {
                            InvoiceId = new Guid("e93998d4-4f87-4e31-905d-78d701c39974"),
                            ProductColorsId = new Guid("d766c004-7f88-46de-95bf-32dbfb273d02"),
                            ProductPrice = 999.99000000000001,
                            Quantity = 3
                        },
                        new
                        {
                            InvoiceId = new Guid("1128508f-956a-4d0d-bd29-563ced37221e"),
                            ProductColorsId = new Guid("9dd2f04b-de01-4295-9cab-6e6bf6992fbe"),
                            ProductPrice = 1199.99,
                            Quantity = 1
                        },
                        new
                        {
                            InvoiceId = new Guid("1128508f-956a-4d0d-bd29-563ced37221e"),
                            ProductColorsId = new Guid("87fc82e9-9e05-4f88-9a49-13c590c22534"),
                            ProductPrice = 1199.99,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("TechShop.Core.Models.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ChatId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsCustomer")
                        .HasColumnType("bit");

                    b.Property<string>("Text_message")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.ToTable("Messages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("da8ec773-6b4a-445d-9f4b-4242a5ccead9"),
                            ChatId = new Guid("61440a81-0cbf-4ba4-a9d8-be04f00b9109"),
                            CreateAt = new DateTime(2024, 9, 26, 9, 41, 52, 979, DateTimeKind.Local).AddTicks(196),
                            IsCustomer = true,
                            Text_message = "Hello you"
                        },
                        new
                        {
                            Id = new Guid("196b793b-bb3e-46ba-b35f-690eafb0023f"),
                            ChatId = new Guid("61440a81-0cbf-4ba4-a9d8-be04f00b9109"),
                            CreateAt = new DateTime(2024, 9, 26, 9, 42, 52, 979, DateTimeKind.Local).AddTicks(201),
                            IsCustomer = false,
                            Text_message = "Hello, how are you today"
                        },
                        new
                        {
                            Id = new Guid("0d4ac38f-86b1-4ad2-8759-2e11a31cca6c"),
                            ChatId = new Guid("61440a81-0cbf-4ba4-a9d8-be04f00b9109"),
                            CreateAt = new DateTime(2024, 9, 26, 9, 43, 52, 979, DateTimeKind.Local).AddTicks(205),
                            IsCustomer = true,
                            Text_message = "Im fine, but my boss at FPT 'Chen ep' me, i can't work at the company anymore"
                        },
                        new
                        {
                            Id = new Guid("567409c2-2100-4d78-96a1-dd02a55e342c"),
                            ChatId = new Guid("61440a81-0cbf-4ba4-a9d8-be04f00b9109"),
                            CreateAt = new DateTime(2024, 9, 26, 9, 44, 52, 979, DateTimeKind.Local).AddTicks(207),
                            IsCustomer = false,
                            Text_message = "Your boss is Nguyen Phuc Du"
                        },
                        new
                        {
                            Id = new Guid("7f9a27f1-55f3-4d07-a5ab-9efae69cb2eb"),
                            ChatId = new Guid("61440a81-0cbf-4ba4-a9d8-be04f00b9109"),
                            CreateAt = new DateTime(2024, 9, 26, 9, 45, 52, 979, DateTimeKind.Local).AddTicks(210),
                            IsCustomer = true,
                            Text_message = "Yes, i working like a dog day and day, and he not allow me rest, alse the holiday he assign so many task to me"
                        },
                        new
                        {
                            Id = new Guid("1a224c1a-c782-4b28-a6cc-4ddc681a22e7"),
                            ChatId = new Guid("61440a81-0cbf-4ba4-a9d8-be04f00b9109"),
                            CreateAt = new DateTime(2024, 9, 26, 9, 46, 52, 979, DateTimeKind.Local).AddTicks(213),
                            IsCustomer = false,
                            Text_message = "Im sorry about that, i hear so many the complain about your boss"
                        },
                        new
                        {
                            Id = new Guid("c32757c7-8cbc-4119-90d7-65171d69bf4d"),
                            ChatId = new Guid("70d16e23-5df5-486e-8e68-e49aa8550a9c"),
                            CreateAt = new DateTime(2024, 9, 26, 9, 47, 52, 979, DateTimeKind.Local).AddTicks(216),
                            IsCustomer = true,
                            Text_message = "Hello"
                        },
                        new
                        {
                            Id = new Guid("0d4ad93e-e3cd-4b07-adbc-671d1a6f3b8f"),
                            ChatId = new Guid("70d16e23-5df5-486e-8e68-e49aa8550a9c"),
                            CreateAt = new DateTime(2024, 9, 26, 9, 48, 52, 979, DateTimeKind.Local).AddTicks(221),
                            IsCustomer = false,
                            Text_message = "F*ck you"
                        });
                });

            modelBuilder.Entity("TechShop.Core.Models.Order", b =>
                {
                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProductColorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("OrderCustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OrderProductColorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quanitity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("CustomerId", "ProductColorId");

                    b.HasIndex("ProductColorId");

                    b.HasIndex("OrderCustomerId", "OrderProductColorId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            CustomerId = new Guid("0f2456ef-da81-4455-9dfc-e5d6d4205849"),
                            ProductColorId = new Guid("a7183b5b-3fb8-4319-a450-2ef9846f0800"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9767),
                            Quanitity = 2,
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9768)
                        },
                        new
                        {
                            CustomerId = new Guid("0f2456ef-da81-4455-9dfc-e5d6d4205849"),
                            ProductColorId = new Guid("55341dcd-b668-4f86-9f20-fa976e086e7d"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9771),
                            Quanitity = 1,
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9771)
                        },
                        new
                        {
                            CustomerId = new Guid("0f2456ef-da81-4455-9dfc-e5d6d4205849"),
                            ProductColorId = new Guid("1e414639-10d2-4acc-a8ff-f6899551cdbf"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9773),
                            Quanitity = 3,
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9774)
                        },
                        new
                        {
                            CustomerId = new Guid("0f2456ef-da81-4455-9dfc-e5d6d4205849"),
                            ProductColorId = new Guid("d766c004-7f88-46de-95bf-32dbfb273d02"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9776),
                            Quanitity = 1,
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9776)
                        },
                        new
                        {
                            CustomerId = new Guid("0f2456ef-da81-4455-9dfc-e5d6d4205849"),
                            ProductColorId = new Guid("9dd2f04b-de01-4295-9cab-6e6bf6992fbe"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9778),
                            Quanitity = 2,
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9779)
                        });
                });

            modelBuilder.Entity("TechShop.Core.Models.Product", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BrandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Discount")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UrlSlug")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("99144d35-20d1-45bb-9301-d7275b874d94"),
                            BrandId = new Guid("7a0f7330-2fe2-432d-91c1-ee96a48a8ca8"),
                            CategoryId = new Guid("6d0dfc2c-f26f-4ec4-aab7-59079e5fe7c5"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8811),
                            Description = "Latest Apple iPhone with A15 Bionic chip.",
                            Discount = 5,
                            Image = "https://example.com/images/iphone13.jpg",
                            Name = "iPhone 13",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8813),
                            UrlSlug = "iphone-13"
                        },
                        new
                        {
                            Id = new Guid("495a42be-85fd-452c-abfc-55edead730af"),
                            BrandId = new Guid("85e9a56d-fc9b-4e1f-ad68-21cca7dfb436"),
                            CategoryId = new Guid("80ff6f18-ea57-43f3-9b8d-226a4b002758"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8818),
                            Description = "Flagship Samsung phone with Exynos 2100.",
                            Discount = 10,
                            Image = "https://example.com/images/galaxy-s21.jpg",
                            Name = "Samsung Galaxy S21",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8819),
                            UrlSlug = "galaxy-s21"
                        },
                        new
                        {
                            Id = new Guid("c91d55b2-fae9-4da6-b248-c1f6be6e439a"),
                            BrandId = new Guid("7a0f7330-2fe2-432d-91c1-ee96a48a8ca8"),
                            CategoryId = new Guid("2f17b91e-1f82-4720-8f32-c972ec3c8a09"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8822),
                            Description = "Apple iPad Pro with M1 chip.",
                            Discount = 7,
                            Image = "https://example.com/images/ipad-pro.jpg",
                            Name = "iPad Pro",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8823),
                            UrlSlug = "ipad-pro"
                        },
                        new
                        {
                            Id = new Guid("3fd418e6-652b-45f2-9687-224b0655e437"),
                            BrandId = new Guid("85e9a56d-fc9b-4e1f-ad68-21cca7dfb436"),
                            CategoryId = new Guid("908d467a-84ca-4b7f-a37c-d9964bd3d788"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8830),
                            Description = "Smartwatch with advanced health tracking features.",
                            Discount = 12,
                            Image = "https://example.com/images/galaxy-watch.jpg",
                            Name = "Samsung Galaxy Watch",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8831),
                            UrlSlug = "galaxy-watch"
                        },
                        new
                        {
                            Id = new Guid("e3589f3d-78ca-4a76-9624-caf516166ddf"),
                            BrandId = new Guid("6153d1df-8e4c-4f10-ab8e-a60809573c05"),
                            CategoryId = new Guid("ad295af0-70e4-4a63-8e37-eeb960e8998e"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8838),
                            Description = "4K UHD Smart TV with OLED display.",
                            Discount = 15,
                            Image = "https://example.com/images/sony-bravia.jpg",
                            Name = "Sony Bravia 55-inch",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8839),
                            UrlSlug = "sony-bravia"
                        },
                        new
                        {
                            Id = new Guid("96f0fead-2b10-4c3e-b5d4-5d788dfc7628"),
                            BrandId = new Guid("48720627-137e-4089-9668-f8f3b823186a"),
                            CategoryId = new Guid("80ff6f18-ea57-43f3-9b8d-226a4b002758"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8988),
                            Description = "Compact and powerful ultrabook with Intel i7 processor.",
                            Discount = 10,
                            Image = "https://example.com/images/dell-xps13.jpg",
                            Name = "Dell XPS 13",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8989),
                            UrlSlug = "dell-xps13"
                        },
                        new
                        {
                            Id = new Guid("d8941bfd-43dc-40d0-a03a-11798de391fc"),
                            BrandId = new Guid("a0afc49f-f2c1-4c04-8916-4e05b6ac7fe0"),
                            CategoryId = new Guid("76f25b28-3096-4a32-9a3a-5646b720015f"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8993),
                            Description = "Affordable desktop with AMD Ryzen processor.",
                            Discount = 20,
                            Image = "https://example.com/images/hp-pavilion.jpg",
                            Name = "HP Pavilion Desktop",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8993),
                            UrlSlug = "hp-pavilion"
                        },
                        new
                        {
                            Id = new Guid("a8840f4b-3d25-4737-89b1-5c359c05cb00"),
                            BrandId = new Guid("efd5a997-0a4f-457a-9969-df088d01c82e"),
                            CategoryId = new Guid("dbc5b522-1516-4469-a7a1-b42e2637b3cd"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8997),
                            Description = "High-performance gaming laptop with NVIDIA RTX graphics.",
                            Discount = 18,
                            Image = "https://example.com/images/lenovo-legion5.jpg",
                            Name = "Lenovo Legion 5",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(8997),
                            UrlSlug = "lenovo-legion5"
                        },
                        new
                        {
                            Id = new Guid("7466bf1b-6888-4d9c-a83b-697a76f82ee3"),
                            BrandId = new Guid("c86a7099-dea4-46b2-9017-12bc015d23e4"),
                            CategoryId = new Guid("dbc5b522-1516-4469-a7a1-b42e2637b3cd"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9000),
                            Description = "Next-gen gaming console with 4K gaming capabilities.",
                            Discount = 5,
                            Image = "https://example.com/images/xbox-series-x.jpg",
                            Name = "Microsoft Xbox Series X",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9004),
                            UrlSlug = "xbox-series-x"
                        },
                        new
                        {
                            Id = new Guid("76a1caa8-5d92-4dfa-83e2-09beed5af447"),
                            BrandId = new Guid("210eb0ed-23fd-42f8-9dd7-b00cfd19715e"),
                            CategoryId = new Guid("80ff6f18-ea57-43f3-9b8d-226a4b002758"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9010),
                            Description = "Ultra-thin gaming laptop with AMD Ryzen 9 processor.",
                            Discount = 15,
                            Image = "https://example.com/images/asus-rog.jpg",
                            Name = "Asus ROG Zephyrus",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9011),
                            UrlSlug = "asus-rog-zephyrus"
                        },
                        new
                        {
                            Id = new Guid("2807a392-5d67-4bf8-ad60-619cbd15b389"),
                            BrandId = new Guid("ed7da3d4-b839-4c35-ae1c-663760a9794d"),
                            CategoryId = new Guid("76f25b28-3096-4a32-9a3a-5646b720015f"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9014),
                            Description = "Compact gaming desktop with powerful performance.",
                            Discount = 20,
                            Image = "https://example.com/images/acer-predator.jpg",
                            Name = "Acer Predator Orion 3000",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9015),
                            UrlSlug = "acer-predator-orion"
                        },
                        new
                        {
                            Id = new Guid("787ec87d-d82d-4bb9-ba3c-517e7e60d16f"),
                            BrandId = new Guid("fe9d1df6-9f06-4436-b52f-bc821466c09a"),
                            CategoryId = new Guid("6d0dfc2c-f26f-4ec4-aab7-59079e5fe7c5"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9021),
                            Description = "Flagship Huawei smartphone with cutting-edge technology.",
                            Discount = 10,
                            Image = "https://example.com/images/huawei-mate40.jpg",
                            Name = "Huawei Mate 40 Pro",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9021),
                            UrlSlug = "huawei-mate40-pro"
                        },
                        new
                        {
                            Id = new Guid("05553658-96ea-4fbe-bcdd-9bcb60714da6"),
                            BrandId = new Guid("7a0f7330-2fe2-432d-91c1-ee96a48a8ca8"),
                            CategoryId = new Guid("09e18647-e4e5-4eb2-8b47-cf0d8802eafd"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9025),
                            Description = "Wireless earbuds with active noise cancellation.",
                            Discount = 5,
                            Image = "https://example.com/images/airpods-pro.jpg",
                            Name = "Apple AirPods Pro",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9026),
                            UrlSlug = "airpods-pro"
                        },
                        new
                        {
                            Id = new Guid("c3686570-7258-447e-8495-f776f2298ee0"),
                            BrandId = new Guid("85e9a56d-fc9b-4e1f-ad68-21cca7dfb436"),
                            CategoryId = new Guid("aff23a31-95a1-4f59-8d71-7d99aa9eb71a"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9029),
                            Description = "True wireless earbuds with premium sound.",
                            Discount = 8,
                            Image = "https://example.com/images/galaxy-buds.jpg",
                            Name = "Samsung Galaxy Buds Live",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9030),
                            UrlSlug = "galaxy-buds-live"
                        },
                        new
                        {
                            Id = new Guid("7364d009-fb9d-4ac8-904f-fb8839dd6628"),
                            BrandId = new Guid("6153d1df-8e4c-4f10-ab8e-a60809573c05"),
                            CategoryId = new Guid("dbc5b522-1516-4469-a7a1-b42e2637b3cd"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9034),
                            Description = "Industry-leading noise canceling headphones.",
                            Discount = 12,
                            Image = "https://example.com/images/sony-wh1000xm4.jpg",
                            Name = "Sony WH-1000XM4",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9034),
                            UrlSlug = "sony-wh1000xm4"
                        },
                        new
                        {
                            Id = new Guid("755696b8-c634-4bcd-8382-fed5b9db3e38"),
                            BrandId = new Guid("48720627-137e-4089-9668-f8f3b823186a"),
                            CategoryId = new Guid("dbc5b522-1516-4469-a7a1-b42e2637b3cd"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9038),
                            Description = "Top-tier gaming desktop with cutting-edge hardware.",
                            Discount = 18,
                            Image = "https://example.com/images/alienware.jpg",
                            Name = "Dell Alienware",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9038),
                            UrlSlug = "dell-alienware"
                        },
                        new
                        {
                            Id = new Guid("1c2fb759-8ee2-40eb-942b-15cfc5ffe140"),
                            BrandId = new Guid("a0afc49f-f2c1-4c04-8916-4e05b6ac7fe0"),
                            CategoryId = new Guid("80ff6f18-ea57-43f3-9b8d-226a4b002758"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9042),
                            Description = "Sleek laptop with powerful Intel i7 processor.",
                            Discount = 12,
                            Image = "https://example.com/images/hp-envy15.jpg",
                            Name = "HP Envy 15",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9042),
                            UrlSlug = "hp-envy15"
                        },
                        new
                        {
                            Id = new Guid("5f587109-15d8-4b5a-af8a-d18c50cf1073"),
                            BrandId = new Guid("efd5a997-0a4f-457a-9969-df088d01c82e"),
                            CategoryId = new Guid("2f17b91e-1f82-4720-8f32-c972ec3c8a09"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9046),
                            Description = "Versatile tablet with built-in kickstand.",
                            Discount = 7,
                            Image = "https://example.com/images/lenovo-yoga.jpg",
                            Name = "Lenovo Yoga Smart Tab",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9046),
                            UrlSlug = "lenovo-yoga-smart-tab"
                        },
                        new
                        {
                            Id = new Guid("e8248af7-dded-446e-bcd4-de817024becf"),
                            BrandId = new Guid("c86a7099-dea4-46b2-9017-12bc015d23e4"),
                            CategoryId = new Guid("6d0dfc2c-f26f-4ec4-aab7-59079e5fe7c5"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9050),
                            Description = "Dual-screen device for productivity on the go.",
                            Discount = 10,
                            Image = "https://example.com/images/surface-duo.jpg",
                            Name = "Microsoft Surface Duo",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9050),
                            UrlSlug = "microsoft-surface-duo"
                        },
                        new
                        {
                            Id = new Guid("826f3115-6208-4188-b05e-c23e0f095cc4"),
                            BrandId = new Guid("210eb0ed-23fd-42f8-9dd7-b00cfd19715e"),
                            CategoryId = new Guid("908d467a-84ca-4b7f-a37c-d9964bd3d788"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9057),
                            Description = "Stylish smartwatch with customizable faces.",
                            Discount = 15,
                            Image = "https://example.com/images/asus-zenwatch3.jpg",
                            Name = "Asus ZenWatch 3",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9057),
                            UrlSlug = "asus-zenwatch3"
                        },
                        new
                        {
                            Id = new Guid("64ca27c2-5911-45ef-85bf-3bddd4f1284b"),
                            BrandId = new Guid("ed7da3d4-b839-4c35-ae1c-663760a9794d"),
                            CategoryId = new Guid("aff23a31-95a1-4f59-8d71-7d99aa9eb71a"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9060),
                            Description = "Convertible laptop with a sleek design.",
                            Discount = 20,
                            Image = "https://example.com/images/acer-spin5.jpg",
                            Name = "Acer Spin 5",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9061),
                            UrlSlug = "acer-spin5"
                        });
                });

            modelBuilder.Entity("TechShop.Core.Models.ProductColor", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<Guid?>("ProductHardwareId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("RGB")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductHardwareId");

                    b.ToTable("ProductColors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a7183b5b-3fb8-4319-a450-2ef9846f0800"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9418),
                            Price = 999.99000000000001,
                            ProductHardwareId = new Guid("d9035c57-39a4-4c94-b35a-469899e39d62"),
                            Quantity = 50,
                            RGB = "#000000",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9418)
                        },
                        new
                        {
                            Id = new Guid("55341dcd-b668-4f86-9f20-fa976e086e7d"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9424),
                            Price = 999.99000000000001,
                            ProductHardwareId = new Guid("d9035c57-39a4-4c94-b35a-469899e39d62"),
                            Quantity = 40,
                            RGB = "#FFFFFF",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9425)
                        },
                        new
                        {
                            Id = new Guid("1e414639-10d2-4acc-a8ff-f6899551cdbf"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9428),
                            Price = 999.99000000000001,
                            ProductHardwareId = new Guid("d9035c57-39a4-4c94-b35a-469899e39d62"),
                            Quantity = 30,
                            RGB = "#FF0000",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9428)
                        },
                        new
                        {
                            Id = new Guid("d766c004-7f88-46de-95bf-32dbfb273d02"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9431),
                            Price = 799.99000000000001,
                            ProductHardwareId = new Guid("fc23ca85-6bf4-4821-b1ca-c19478e12f17"),
                            Quantity = 60,
                            RGB = "#000000",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9432)
                        },
                        new
                        {
                            Id = new Guid("9dd2f04b-de01-4295-9cab-6e6bf6992fbe"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9435),
                            Price = 799.99000000000001,
                            ProductHardwareId = new Guid("fc23ca85-6bf4-4821-b1ca-c19478e12f17"),
                            Quantity = 50,
                            RGB = "#FFFFFF",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9435)
                        },
                        new
                        {
                            Id = new Guid("87fc82e9-9e05-4f88-9a49-13c590c22534"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9438),
                            Price = 799.99000000000001,
                            ProductHardwareId = new Guid("fc23ca85-6bf4-4821-b1ca-c19478e12f17"),
                            Quantity = 45,
                            RGB = "#FF0000",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9439)
                        },
                        new
                        {
                            Id = new Guid("120bb387-2412-47f3-9860-cf65f98022d3"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9441),
                            Price = 849.99000000000001,
                            ProductHardwareId = new Guid("dc71e128-e94c-4f43-9739-bee2b9baf820"),
                            Quantity = 70,
                            RGB = "#6D6E71",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9442)
                        },
                        new
                        {
                            Id = new Guid("e13e346b-cb82-4574-a5a9-605e7fdcead6"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9444),
                            Price = 849.99000000000001,
                            ProductHardwareId = new Guid("dc71e128-e94c-4f43-9739-bee2b9baf820"),
                            Quantity = 65,
                            RGB = "#F8F8F8",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9445)
                        },
                        new
                        {
                            Id = new Guid("e45d640a-72e3-45e2-baa4-c23a2b89bee3"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9451),
                            Price = 849.99000000000001,
                            ProductHardwareId = new Guid("dc71e128-e94c-4f43-9739-bee2b9baf820"),
                            Quantity = 60,
                            RGB = "#8C4B9A",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9452)
                        },
                        new
                        {
                            Id = new Guid("2d54b5a0-6fa5-4432-90b8-7217fc8f22e5"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9455),
                            Price = 999.99000000000001,
                            ProductHardwareId = new Guid("8a8baa65-294c-4e58-89e2-cf81359c2d93"),
                            Quantity = 55,
                            RGB = "#6D6E71",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9455)
                        },
                        new
                        {
                            Id = new Guid("0a22d2f7-ae0e-4986-9642-8dbcd8ecf98d"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9458),
                            Price = 999.99000000000001,
                            ProductHardwareId = new Guid("8a8baa65-294c-4e58-89e2-cf81359c2d93"),
                            Quantity = 50,
                            RGB = "#F8F8F8",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9458)
                        },
                        new
                        {
                            Id = new Guid("7375e781-94e4-42f1-a1a2-2161e433f8eb"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9461),
                            Price = 999.99000000000001,
                            ProductHardwareId = new Guid("8a8baa65-294c-4e58-89e2-cf81359c2d93"),
                            Quantity = 45,
                            RGB = "#8C4B9A",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9461)
                        },
                        new
                        {
                            Id = new Guid("56ded32a-e2a3-4fac-b78a-91355df7f609"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9464),
                            Price = 799.99000000000001,
                            ProductHardwareId = new Guid("a241ff16-4d75-4880-b0ee-5807284ecd45"),
                            Quantity = 85,
                            RGB = "#3C3C3C",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9465)
                        },
                        new
                        {
                            Id = new Guid("c4683db0-7530-40b1-888b-f9cfc22b08f6"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9509),
                            Price = 799.99000000000001,
                            ProductHardwareId = new Guid("a241ff16-4d75-4880-b0ee-5807284ecd45"),
                            Quantity = 80,
                            RGB = "#C0C0C0",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9509)
                        },
                        new
                        {
                            Id = new Guid("3de9cdf9-89cb-4772-8b66-107186ad54cb"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9512),
                            Price = 999.99000000000001,
                            ProductHardwareId = new Guid("83207d05-25da-476b-b957-1df38ce55840"),
                            Quantity = 75,
                            RGB = "#3C3C3C",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9513)
                        },
                        new
                        {
                            Id = new Guid("c0257381-b7ac-4ead-b4e6-30fe4cd6fccd"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9516),
                            Price = 999.99000000000001,
                            ProductHardwareId = new Guid("83207d05-25da-476b-b957-1df38ce55840"),
                            Quantity = 70,
                            RGB = "#C0C0C0",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9516)
                        },
                        new
                        {
                            Id = new Guid("042e6999-2285-4788-8f45-18488585cddc"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9521),
                            Price = 1199.99,
                            ProductHardwareId = new Guid("4bc53e12-65a6-4699-a5ce-db60c5a29319"),
                            Quantity = 30,
                            RGB = "#C0C0C0",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9522)
                        },
                        new
                        {
                            Id = new Guid("ddcd96bf-f396-439e-8e4d-081892533308"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9525),
                            Price = 1199.99,
                            ProductHardwareId = new Guid("4bc53e12-65a6-4699-a5ce-db60c5a29319"),
                            Quantity = 25,
                            RGB = "#F7F7F7",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9525)
                        },
                        new
                        {
                            Id = new Guid("ae1d719f-4cac-4e30-becd-328606470450"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9528),
                            Price = 1399.99,
                            ProductHardwareId = new Guid("2dd54462-a38b-4435-a06b-93faa9b4c2ec"),
                            Quantity = 35,
                            RGB = "#C0C0C0",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9529)
                        },
                        new
                        {
                            Id = new Guid("ec6dbc2d-5fe1-4138-8fa4-659668ded781"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9531),
                            Price = 1399.99,
                            ProductHardwareId = new Guid("2dd54462-a38b-4435-a06b-93faa9b4c2ec"),
                            Quantity = 30,
                            RGB = "#F7F7F7",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9532)
                        },
                        new
                        {
                            Id = new Guid("e0117e3d-4523-4a2e-90be-4133b068a255"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9534),
                            Price = 1299.99,
                            ProductHardwareId = new Guid("13d20162-6371-43bd-b866-21224b0fb437"),
                            Quantity = 40,
                            RGB = "#000000",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9536)
                        },
                        new
                        {
                            Id = new Guid("52a3b2df-d5cb-4bd5-8bb9-f70a816b14c5"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9539),
                            Price = 1299.99,
                            ProductHardwareId = new Guid("13d20162-6371-43bd-b866-21224b0fb437"),
                            Quantity = 35,
                            RGB = "#FFFFFF",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9540)
                        },
                        new
                        {
                            Id = new Guid("1aa6ef6f-fd2d-44ba-b377-a1e218303b5e"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9542),
                            Price = 1299.99,
                            ProductHardwareId = new Guid("13d20162-6371-43bd-b866-21224b0fb437"),
                            Quantity = 30,
                            RGB = "#CCCCCC",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9543)
                        },
                        new
                        {
                            Id = new Guid("bb4aac6b-2019-493e-98f7-abcf22369dd9"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9545),
                            Price = 499.99000000000001,
                            ProductHardwareId = new Guid("4be38d4a-28fc-4a20-a4dd-af0e3bff924a"),
                            Quantity = 50,
                            RGB = "#8B8B8B",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9546)
                        },
                        new
                        {
                            Id = new Guid("911a4a78-9a4e-4c61-bd62-5b0bb94d53d4"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9551),
                            Price = 499.99000000000001,
                            ProductHardwareId = new Guid("4be38d4a-28fc-4a20-a4dd-af0e3bff924a"),
                            Quantity = 45,
                            RGB = "#FFFFFF",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9551)
                        },
                        new
                        {
                            Id = new Guid("d000dcb8-9861-436f-ac06-ecb29a0a9f63"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9554),
                            Price = 499.99000000000001,
                            ProductHardwareId = new Guid("4be38d4a-28fc-4a20-a4dd-af0e3bff924a"),
                            Quantity = 40,
                            RGB = "#000000",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9554)
                        },
                        new
                        {
                            Id = new Guid("5dfc0fc2-0f59-4bf6-a14c-74233436ad60"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9557),
                            Price = 1199.99,
                            ProductHardwareId = new Guid("f3e62faf-2956-4667-9501-2e94435e0c44"),
                            Quantity = 20,
                            RGB = "#000000",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9557)
                        },
                        new
                        {
                            Id = new Guid("45f8192b-00e6-4f28-8e5e-b86fd0298cba"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9560),
                            Price = 1199.99,
                            ProductHardwareId = new Guid("f3e62faf-2956-4667-9501-2e94435e0c44"),
                            Quantity = 18,
                            RGB = "#4B4B4B",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9560)
                        },
                        new
                        {
                            Id = new Guid("efdc63b3-2199-431a-86ab-1edac98d6181"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9563),
                            Price = 499.99000000000001,
                            ProductHardwareId = new Guid("efb9d89c-d4c1-4bd7-b82d-ceb9d57edc6a"),
                            Quantity = 25,
                            RGB = "#000000",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9563)
                        },
                        new
                        {
                            Id = new Guid("b433895b-4933-4b08-b851-5d79bbcf634d"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9567),
                            Price = 499.99000000000001,
                            ProductHardwareId = new Guid("efb9d89c-d4c1-4bd7-b82d-ceb9d57edc6a"),
                            Quantity = 20,
                            RGB = "#4F4F4F",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9568)
                        },
                        new
                        {
                            Id = new Guid("5e886cf9-7111-4f2a-a77a-916d0c3038e7"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9570),
                            Price = 1499.99,
                            ProductHardwareId = new Guid("b9528a02-76f2-4314-9f78-bba0ea096e51"),
                            Quantity = 15,
                            RGB = "#000000",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9571)
                        },
                        new
                        {
                            Id = new Guid("dfaa0de7-9e21-4d7d-aae9-6d4886aa4c3e"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9573),
                            Price = 1499.99,
                            ProductHardwareId = new Guid("b9528a02-76f2-4314-9f78-bba0ea096e51"),
                            Quantity = 12,
                            RGB = "#343434",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9574)
                        },
                        new
                        {
                            Id = new Guid("b5dbe8fb-ef82-421a-856e-8dff2bd284f2"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9578),
                            Price = 1199.99,
                            ProductHardwareId = new Guid("b0018fde-172d-412e-bfd4-e7497e18f848"),
                            Quantity = 10,
                            RGB = "#FFFFFF",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9579)
                        },
                        new
                        {
                            Id = new Guid("1a70e5ae-71f8-42ca-9518-b5e6998ce8b3"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9582),
                            Price = 1199.99,
                            ProductHardwareId = new Guid("b0018fde-172d-412e-bfd4-e7497e18f848"),
                            Quantity = 8,
                            RGB = "#7B7B7B",
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9583)
                        });
                });

            modelBuilder.Entity("TechShop.Core.Models.ProductFilter", b =>
                {
                    b.Property<Guid?>("FilterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FilterId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductFilters");

                    b.HasData(
                        new
                        {
                            FilterId = new Guid("67507f8c-2351-48b7-b07e-6b50b69fb7db"),
                            ProductId = new Guid("99144d35-20d1-45bb-9301-d7275b874d94")
                        },
                        new
                        {
                            FilterId = new Guid("894f8507-cf37-4d63-9c16-993b543654a6"),
                            ProductId = new Guid("495a42be-85fd-452c-abfc-55edead730af")
                        },
                        new
                        {
                            FilterId = new Guid("90abdddb-d6a9-414f-b40d-70e1756a0b83"),
                            ProductId = new Guid("c91d55b2-fae9-4da6-b248-c1f6be6e439a")
                        },
                        new
                        {
                            FilterId = new Guid("fa45c0be-014d-4e41-bbd4-4fc7bec97358"),
                            ProductId = new Guid("3fd418e6-652b-45f2-9687-224b0655e437")
                        },
                        new
                        {
                            FilterId = new Guid("54794ede-52fb-46fb-b35f-9285d51338eb"),
                            ProductId = new Guid("e3589f3d-78ca-4a76-9624-caf516166ddf")
                        },
                        new
                        {
                            FilterId = new Guid("a94775da-e452-4270-9a05-537f103cd70b"),
                            ProductId = new Guid("96f0fead-2b10-4c3e-b5d4-5d788dfc7628")
                        },
                        new
                        {
                            FilterId = new Guid("3c4265fb-955d-4e2d-9d7f-2f40ca0164ff"),
                            ProductId = new Guid("d8941bfd-43dc-40d0-a03a-11798de391fc")
                        },
                        new
                        {
                            FilterId = new Guid("5a6e4e4e-f8ce-46f7-b5e2-7e8968ce43ed"),
                            ProductId = new Guid("a8840f4b-3d25-4737-89b1-5c359c05cb00")
                        },
                        new
                        {
                            FilterId = new Guid("37d35afd-167d-4be2-915d-80074b52c4b8"),
                            ProductId = new Guid("7466bf1b-6888-4d9c-a83b-697a76f82ee3")
                        },
                        new
                        {
                            FilterId = new Guid("67507f8c-2351-48b7-b07e-6b50b69fb7db"),
                            ProductId = new Guid("2807a392-5d67-4bf8-ad60-619cbd15b389")
                        },
                        new
                        {
                            FilterId = new Guid("894f8507-cf37-4d63-9c16-993b543654a6"),
                            ProductId = new Guid("787ec87d-d82d-4bb9-ba3c-517e7e60d16f")
                        },
                        new
                        {
                            FilterId = new Guid("90abdddb-d6a9-414f-b40d-70e1756a0b83"),
                            ProductId = new Guid("05553658-96ea-4fbe-bcdd-9bcb60714da6")
                        },
                        new
                        {
                            FilterId = new Guid("fa45c0be-014d-4e41-bbd4-4fc7bec97358"),
                            ProductId = new Guid("c3686570-7258-447e-8495-f776f2298ee0")
                        },
                        new
                        {
                            FilterId = new Guid("54794ede-52fb-46fb-b35f-9285d51338eb"),
                            ProductId = new Guid("7364d009-fb9d-4ac8-904f-fb8839dd6628")
                        },
                        new
                        {
                            FilterId = new Guid("a94775da-e452-4270-9a05-537f103cd70b"),
                            ProductId = new Guid("755696b8-c634-4bcd-8382-fed5b9db3e38")
                        },
                        new
                        {
                            FilterId = new Guid("3c4265fb-955d-4e2d-9d7f-2f40ca0164ff"),
                            ProductId = new Guid("1c2fb759-8ee2-40eb-942b-15cfc5ffe140")
                        },
                        new
                        {
                            FilterId = new Guid("5a6e4e4e-f8ce-46f7-b5e2-7e8968ce43ed"),
                            ProductId = new Guid("5f587109-15d8-4b5a-af8a-d18c50cf1073")
                        },
                        new
                        {
                            FilterId = new Guid("37d35afd-167d-4be2-915d-80074b52c4b8"),
                            ProductId = new Guid("e8248af7-dded-446e-bcd4-de817024becf")
                        });
                });

            modelBuilder.Entity("TechShop.Core.Models.ProductHardware", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductHardwares");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d9035c57-39a4-4c94-b35a-469899e39d62"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9072),
                            Name = "256GB Storage",
                            ProductId = new Guid("99144d35-20d1-45bb-9301-d7275b874d94"),
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9073)
                        },
                        new
                        {
                            Id = new Guid("fc23ca85-6bf4-4821-b1ca-c19478e12f17"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9077),
                            Name = "64GB Storage",
                            ProductId = new Guid("99144d35-20d1-45bb-9301-d7275b874d94"),
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9078)
                        },
                        new
                        {
                            Id = new Guid("dc71e128-e94c-4f43-9739-bee2b9baf820"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9080),
                            Name = "128GB Storage",
                            ProductId = new Guid("495a42be-85fd-452c-abfc-55edead730af"),
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9081)
                        },
                        new
                        {
                            Id = new Guid("8a8baa65-294c-4e58-89e2-cf81359c2d93"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9084),
                            Name = "256GB Storage",
                            ProductId = new Guid("495a42be-85fd-452c-abfc-55edead730af"),
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9084)
                        },
                        new
                        {
                            Id = new Guid("a241ff16-4d75-4880-b0ee-5807284ecd45"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9087),
                            Name = "128GB Storage",
                            ProductId = new Guid("c91d55b2-fae9-4da6-b248-c1f6be6e439a"),
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9087)
                        },
                        new
                        {
                            Id = new Guid("83207d05-25da-476b-b957-1df38ce55840"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9091),
                            Name = "256GB Storage",
                            ProductId = new Guid("c91d55b2-fae9-4da6-b248-c1f6be6e439a"),
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9092)
                        },
                        new
                        {
                            Id = new Guid("4bc53e12-65a6-4699-a5ce-db60c5a29319"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9096),
                            Name = "Bluetooth Version",
                            ProductId = new Guid("3fd418e6-652b-45f2-9687-224b0655e437"),
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9097)
                        },
                        new
                        {
                            Id = new Guid("2dd54462-a38b-4435-a06b-93faa9b4c2ec"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9100),
                            Name = "LTE Version",
                            ProductId = new Guid("3fd418e6-652b-45f2-9687-224b0655e437"),
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9100)
                        },
                        new
                        {
                            Id = new Guid("13d20162-6371-43bd-b866-21224b0fb437"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9103),
                            Name = "4K UHD",
                            ProductId = new Guid("e3589f3d-78ca-4a76-9624-caf516166ddf"),
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9103)
                        },
                        new
                        {
                            Id = new Guid("4be38d4a-28fc-4a20-a4dd-af0e3bff924a"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9106),
                            Name = "Intel i7 Processor",
                            ProductId = new Guid("96f0fead-2b10-4c3e-b5d4-5d788dfc7628"),
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9107)
                        },
                        new
                        {
                            Id = new Guid("f3e62faf-2956-4667-9501-2e94435e0c44"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9110),
                            Name = "16GB RAM",
                            ProductId = new Guid("96f0fead-2b10-4c3e-b5d4-5d788dfc7628"),
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9110)
                        },
                        new
                        {
                            Id = new Guid("efb9d89c-d4c1-4bd7-b82d-ceb9d57edc6a"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9113),
                            Name = "AMD Ryzen 5 Processor",
                            ProductId = new Guid("d8941bfd-43dc-40d0-a03a-11798de391fc"),
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9113)
                        },
                        new
                        {
                            Id = new Guid("b9528a02-76f2-4314-9f78-bba0ea096e51"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9116),
                            Name = "8GB RAM",
                            ProductId = new Guid("d8941bfd-43dc-40d0-a03a-11798de391fc"),
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9117)
                        },
                        new
                        {
                            Id = new Guid("b0018fde-172d-412e-bfd4-e7497e18f848"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9120),
                            Name = "NVIDIA RTX 3060",
                            ProductId = new Guid("a8840f4b-3d25-4737-89b1-5c359c05cb00"),
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9121)
                        },
                        new
                        {
                            Id = new Guid("b5de408d-358f-423a-9078-db785a9a41ac"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9130),
                            Name = "16GB RAM",
                            ProductId = new Guid("a8840f4b-3d25-4737-89b1-5c359c05cb00"),
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9131)
                        },
                        new
                        {
                            Id = new Guid("65354317-24ef-4f8a-b16c-7290837603da"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9138),
                            Name = "1TB Storage",
                            ProductId = new Guid("7466bf1b-6888-4d9c-a83b-697a76f82ee3"),
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9139)
                        },
                        new
                        {
                            Id = new Guid("8808db8a-325a-4710-bb8f-95f5cb9a2891"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9142),
                            Name = "AMD Ryzen 9 Processor",
                            ProductId = new Guid("76a1caa8-5d92-4dfa-83e2-09beed5af447"),
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9143)
                        },
                        new
                        {
                            Id = new Guid("506f96f7-044e-4eae-844f-cd7e9be27c7a"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9146),
                            Name = "32GB RAM",
                            ProductId = new Guid("76a1caa8-5d92-4dfa-83e2-09beed5af447"),
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9147)
                        },
                        new
                        {
                            Id = new Guid("0b7a6fa1-7b24-410a-92ae-5fdd31f811e9"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9149),
                            Name = "Intel i9 Processor",
                            ProductId = new Guid("2807a392-5d67-4bf8-ad60-619cbd15b389"),
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9149)
                        },
                        new
                        {
                            Id = new Guid("efb16b2d-65f4-4827-a8aa-fda6219240d4"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9152),
                            Name = "256GB Storage",
                            ProductId = new Guid("787ec87d-d82d-4bb9-ba3c-517e7e60d16f"),
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9152)
                        },
                        new
                        {
                            Id = new Guid("6f00ed86-5402-4cab-8cca-678a9df06ea1"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9162),
                            Name = "Wireless Charging Case",
                            ProductId = new Guid("05553658-96ea-4fbe-bcdd-9bcb60714da6"),
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9162)
                        },
                        new
                        {
                            Id = new Guid("08631063-36cb-4f23-b023-667083f58472"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9165),
                            Name = "Active Noise Cancellation",
                            ProductId = new Guid("c3686570-7258-447e-8495-f776f2298ee0"),
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9166)
                        },
                        new
                        {
                            Id = new Guid("adbb661f-a09e-4646-be50-bbb6423168b4"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9171),
                            Name = "Industry-leading Noise Cancellation",
                            ProductId = new Guid("7364d009-fb9d-4ac8-904f-fb8839dd6628"),
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9171)
                        },
                        new
                        {
                            Id = new Guid("947abebf-e343-4d27-b46f-81471b5d204b"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9174),
                            Name = "Intel i9 Processor",
                            ProductId = new Guid("755696b8-c634-4bcd-8382-fed5b9db3e38"),
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9174)
                        },
                        new
                        {
                            Id = new Guid("45d20a4c-862d-4824-bf96-51040aed1538"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9177),
                            Name = "32GB RAM",
                            ProductId = new Guid("755696b8-c634-4bcd-8382-fed5b9db3e38"),
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9177)
                        },
                        new
                        {
                            Id = new Guid("034b5ec2-bb45-4a90-a33c-7e67405ba90e"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9180),
                            Name = "Intel i7 Processor",
                            ProductId = new Guid("1c2fb759-8ee2-40eb-942b-15cfc5ffe140"),
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9180)
                        },
                        new
                        {
                            Id = new Guid("73938925-bf83-49d8-a08d-9abb037ab75a"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9183),
                            Name = "128GB Storage",
                            ProductId = new Guid("5f587109-15d8-4b5a-af8a-d18c50cf1073"),
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9183)
                        },
                        new
                        {
                            Id = new Guid("19cab37f-64da-43a3-8fc2-1f9df6e7b56a"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9186),
                            Name = "128GB Storage",
                            ProductId = new Guid("e8248af7-dded-446e-bcd4-de817024becf"),
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9186)
                        },
                        new
                        {
                            Id = new Guid("d748131c-d6b3-46c9-971f-ac84564a9c7b"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9188),
                            Name = "Customizable Watch Faces",
                            ProductId = new Guid("826f3115-6208-4188-b05e-c23e0f095cc4"),
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9189)
                        },
                        new
                        {
                            Id = new Guid("584ff42a-80f8-4d4d-b1d5-6dd59d7fff54"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9192),
                            Name = "Convertible Design",
                            ProductId = new Guid("64ca27c2-5911-45ef-85bf-3bddd4f1284b"),
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9193)
                        });
                });

            modelBuilder.Entity("TechShop.Core.Models.ProductImage", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Alt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UrlImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6760223f-44cd-4725-9c13-e9d7f3c84371"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9204),
                            ProductId = new Guid("99144d35-20d1-45bb-9301-d7275b874d94"),
                            Type = 1,
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9205),
                            UrlImage = "https://example.com/images/iphone13-slide1.jpg"
                        },
                        new
                        {
                            Id = new Guid("a6efd2e3-48e0-4c37-9e95-944f0bafbe8a"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9208),
                            ProductId = new Guid("99144d35-20d1-45bb-9301-d7275b874d94"),
                            Type = 2,
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9209),
                            UrlImage = "https://example.com/images/iphone13-content.jpg"
                        },
                        new
                        {
                            Id = new Guid("fb1de928-d799-400b-8808-5736e1f43217"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9212),
                            ProductId = new Guid("495a42be-85fd-452c-abfc-55edead730af"),
                            Type = 1,
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9212),
                            UrlImage = "https://example.com/images/galaxy-s21-slide1.jpg"
                        },
                        new
                        {
                            Id = new Guid("86d36325-712f-41fd-ab1f-518857922602"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9260),
                            ProductId = new Guid("495a42be-85fd-452c-abfc-55edead730af"),
                            Type = 2,
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9261),
                            UrlImage = "https://example.com/images/galaxy-s21-content.jpg"
                        },
                        new
                        {
                            Id = new Guid("f37d3ef3-411b-4f6b-8cff-29dc48e86626"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9268),
                            ProductId = new Guid("c91d55b2-fae9-4da6-b248-c1f6be6e439a"),
                            Type = 1,
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9268),
                            UrlImage = "https://example.com/images/ipad-pro-slide1.jpg"
                        },
                        new
                        {
                            Id = new Guid("a9b3ba8d-5e70-40ee-a230-aab7d2f4e8ac"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9272),
                            ProductId = new Guid("c91d55b2-fae9-4da6-b248-c1f6be6e439a"),
                            Type = 2,
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9272),
                            UrlImage = "https://example.com/images/ipad-pro-content.jpg"
                        },
                        new
                        {
                            Id = new Guid("8ce31a07-79e3-4768-9e49-ddc3df28d149"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9276),
                            ProductId = new Guid("3fd418e6-652b-45f2-9687-224b0655e437"),
                            Type = 1,
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9276),
                            UrlImage = "https://example.com/images/galaxy-watch-slide1.jpg"
                        },
                        new
                        {
                            Id = new Guid("e53eab1b-3221-44e3-9889-abee6be5310e"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9279),
                            ProductId = new Guid("3fd418e6-652b-45f2-9687-224b0655e437"),
                            Type = 2,
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9280),
                            UrlImage = "https://example.com/images/galaxy-watch-content.jpg"
                        },
                        new
                        {
                            Id = new Guid("e01b75a2-fc03-46ef-9540-ad3c72f977b5"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9285),
                            ProductId = new Guid("e3589f3d-78ca-4a76-9624-caf516166ddf"),
                            Type = 1,
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9286),
                            UrlImage = "https://example.com/images/sony-bravia-slide1.jpg"
                        },
                        new
                        {
                            Id = new Guid("372aafa5-11c2-4818-9d26-4d85065027cd"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9290),
                            ProductId = new Guid("e3589f3d-78ca-4a76-9624-caf516166ddf"),
                            Type = 2,
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9290),
                            UrlImage = "https://example.com/images/sony-bravia-content.jpg"
                        },
                        new
                        {
                            Id = new Guid("e839b60e-a18a-47ef-801f-877b33960a20"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9293),
                            ProductId = new Guid("96f0fead-2b10-4c3e-b5d4-5d788dfc7628"),
                            Type = 1,
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9294),
                            UrlImage = "https://example.com/images/dell-xps13-slide1.jpg"
                        },
                        new
                        {
                            Id = new Guid("34b7889e-a16d-486e-b174-732d00faac6b"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9296),
                            ProductId = new Guid("96f0fead-2b10-4c3e-b5d4-5d788dfc7628"),
                            Type = 2,
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9297),
                            UrlImage = "https://example.com/images/dell-xps13-content.jpg"
                        },
                        new
                        {
                            Id = new Guid("4bdb3a37-ac57-421e-b2c8-8d6b672a7237"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9300),
                            ProductId = new Guid("d8941bfd-43dc-40d0-a03a-11798de391fc"),
                            Type = 1,
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9301),
                            UrlImage = "https://example.com/images/hp-pavilion-slide1.jpg"
                        },
                        new
                        {
                            Id = new Guid("60729a74-580a-448e-b32d-08e8e904ffea"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9305),
                            ProductId = new Guid("d8941bfd-43dc-40d0-a03a-11798de391fc"),
                            Type = 2,
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9305),
                            UrlImage = "https://example.com/images/hp-pavilion-content.jpg"
                        },
                        new
                        {
                            Id = new Guid("d8f6f1d0-4572-40be-b668-56765ae09a75"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9308),
                            ProductId = new Guid("a8840f4b-3d25-4737-89b1-5c359c05cb00"),
                            Type = 1,
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9309),
                            UrlImage = "https://example.com/images/lenovo-legion5-slide1.jpg"
                        },
                        new
                        {
                            Id = new Guid("46521dca-5860-4bdc-b160-4eb1bd3b5196"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9311),
                            ProductId = new Guid("a8840f4b-3d25-4737-89b1-5c359c05cb00"),
                            Type = 2,
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9312),
                            UrlImage = "https://example.com/images/lenovo-legion5-content.jpg"
                        },
                        new
                        {
                            Id = new Guid("fac94261-a3dd-4e59-b99b-c796b2a4a50f"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9317),
                            ProductId = new Guid("7466bf1b-6888-4d9c-a83b-697a76f82ee3"),
                            Type = 1,
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9318),
                            UrlImage = "https://example.com/images/xbox-series-x-slide1.jpg"
                        },
                        new
                        {
                            Id = new Guid("0ada76f0-1873-4cdc-9337-3ee59a1bc961"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9321),
                            ProductId = new Guid("7466bf1b-6888-4d9c-a83b-697a76f82ee3"),
                            Type = 2,
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9322),
                            UrlImage = "https://example.com/images/xbox-series-x-content.jpg"
                        },
                        new
                        {
                            Id = new Guid("7004cae8-62c1-46f7-8778-2776ac1b8a44"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9324),
                            ProductId = new Guid("76a1caa8-5d92-4dfa-83e2-09beed5af447"),
                            Type = 1,
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9325),
                            UrlImage = "https://example.com/images/asus-rog-slide1.jpg"
                        },
                        new
                        {
                            Id = new Guid("faa92ebd-2aef-4fc0-a23f-c66062c8524e"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9328),
                            ProductId = new Guid("76a1caa8-5d92-4dfa-83e2-09beed5af447"),
                            Type = 2,
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9328),
                            UrlImage = "https://example.com/images/asus-rog-content.jpg"
                        },
                        new
                        {
                            Id = new Guid("8b3c5253-2360-44ed-9fb3-1769d82f480f"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9332),
                            ProductId = new Guid("2807a392-5d67-4bf8-ad60-619cbd15b389"),
                            Type = 1,
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9332),
                            UrlImage = "https://example.com/images/acer-predator-slide1.jpg"
                        },
                        new
                        {
                            Id = new Guid("5a67f631-c73e-44d1-bc16-224c63a7cf68"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9335),
                            ProductId = new Guid("2807a392-5d67-4bf8-ad60-619cbd15b389"),
                            Type = 2,
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9335),
                            UrlImage = "https://example.com/images/acer-predator-content.jpg"
                        },
                        new
                        {
                            Id = new Guid("aa3c9dd1-f18a-4332-a52f-1d5a144488aa"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9338),
                            ProductId = new Guid("787ec87d-d82d-4bb9-ba3c-517e7e60d16f"),
                            Type = 1,
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9339),
                            UrlImage = "https://example.com/images/huawei-mate40-slide1.jpg"
                        },
                        new
                        {
                            Id = new Guid("43bd5d87-0a37-43c3-a4a0-da0802f24d65"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9342),
                            ProductId = new Guid("787ec87d-d82d-4bb9-ba3c-517e7e60d16f"),
                            Type = 2,
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9343),
                            UrlImage = "https://example.com/images/huawei-mate40-content.jpg"
                        },
                        new
                        {
                            Id = new Guid("7fc3d2ce-2eaa-4b89-a611-7cb8482ff05e"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9348),
                            ProductId = new Guid("05553658-96ea-4fbe-bcdd-9bcb60714da6"),
                            Type = 1,
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9348),
                            UrlImage = "https://example.com/images/airpods-pro-slide1.jpg"
                        },
                        new
                        {
                            Id = new Guid("bcf3ddac-480b-41f2-8388-c3a077b38f1a"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9351),
                            ProductId = new Guid("05553658-96ea-4fbe-bcdd-9bcb60714da6"),
                            Type = 2,
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9352),
                            UrlImage = "https://example.com/images/airpods-pro-content.jpg"
                        },
                        new
                        {
                            Id = new Guid("23eb2151-fd71-4ea5-830a-03e193c2efa9"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9354),
                            ProductId = new Guid("c3686570-7258-447e-8495-f776f2298ee0"),
                            Type = 1,
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9355),
                            UrlImage = "https://example.com/images/galaxy-buds-slide1.jpg"
                        },
                        new
                        {
                            Id = new Guid("367ecfe6-5083-4faf-a18f-298b683a25c3"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9358),
                            ProductId = new Guid("c3686570-7258-447e-8495-f776f2298ee0"),
                            Type = 2,
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9359),
                            UrlImage = "https://example.com/images/galaxy-buds-content.jpg"
                        },
                        new
                        {
                            Id = new Guid("aa9c05dc-7ee0-44d0-8a98-c1acd1270d23"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9362),
                            ProductId = new Guid("7364d009-fb9d-4ac8-904f-fb8839dd6628"),
                            Type = 1,
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9362),
                            UrlImage = "https://example.com/images/sony-wh1000xm4-slide1.jpg"
                        },
                        new
                        {
                            Id = new Guid("c846d653-0014-4381-b4d1-f80d8e88945a"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9365),
                            ProductId = new Guid("7364d009-fb9d-4ac8-904f-fb8839dd6628"),
                            Type = 2,
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9365),
                            UrlImage = "https://example.com/images/sony-wh1000xm4-content.jpg"
                        },
                        new
                        {
                            Id = new Guid("d9dd3797-4370-4677-8ca4-1765288aca31"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9368),
                            ProductId = new Guid("755696b8-c634-4bcd-8382-fed5b9db3e38"),
                            Type = 1,
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9369),
                            UrlImage = "https://example.com/images/alienware-slide1.jpg"
                        },
                        new
                        {
                            Id = new Guid("2e444beb-0df4-414d-9414-02e21ecd4b12"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9372),
                            ProductId = new Guid("755696b8-c634-4bcd-8382-fed5b9db3e38"),
                            Type = 2,
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9372),
                            UrlImage = "https://example.com/images/alienware-content.jpg"
                        },
                        new
                        {
                            Id = new Guid("d5ae3de8-74fb-4c84-b5cd-fdf3f3953666"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9377),
                            ProductId = new Guid("1c2fb759-8ee2-40eb-942b-15cfc5ffe140"),
                            Type = 1,
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9378),
                            UrlImage = "https://example.com/images/hp-envy15-slide1.jpg"
                        },
                        new
                        {
                            Id = new Guid("0d59b700-1f34-4dd0-be92-52f03c36fbde"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9382),
                            ProductId = new Guid("1c2fb759-8ee2-40eb-942b-15cfc5ffe140"),
                            Type = 2,
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9382),
                            UrlImage = "https://example.com/images/hp-envy15-content.jpg"
                        },
                        new
                        {
                            Id = new Guid("967831b7-b251-4704-a884-74e56a1039e8"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9387),
                            ProductId = new Guid("5f587109-15d8-4b5a-af8a-d18c50cf1073"),
                            Type = 1,
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9388),
                            UrlImage = "https://example.com/images/razer-blade15-slide1.jpg"
                        },
                        new
                        {
                            Id = new Guid("b5cc2da6-bbe6-4bd6-a84a-c44edbecaf61"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9391),
                            ProductId = new Guid("5f587109-15d8-4b5a-af8a-d18c50cf1073"),
                            Type = 2,
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9391),
                            UrlImage = "https://example.com/images/razer-blade15-content.jpg"
                        },
                        new
                        {
                            Id = new Guid("4e0cc3ec-09ff-41a8-915f-16d0aecf0817"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9394),
                            ProductId = new Guid("e8248af7-dded-446e-bcd4-de817024becf"),
                            Type = 1,
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9395),
                            UrlImage = "https://example.com/images/apple-tv4k-slide1.jpg"
                        },
                        new
                        {
                            Id = new Guid("a1be6f15-392e-40c2-9f21-ab4d973d7232"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9397),
                            ProductId = new Guid("e8248af7-dded-446e-bcd4-de817024becf"),
                            Type = 2,
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9398),
                            UrlImage = "https://example.com/images/apple-tv4k-content.jpg"
                        },
                        new
                        {
                            Id = new Guid("9faf7ae4-ff2e-4bc7-ad08-4a5f3161c354"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9400),
                            ProductId = new Guid("826f3115-6208-4188-b05e-c23e0f095cc4"),
                            Type = 1,
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9401),
                            UrlImage = "https://example.com/images/xbox-series-s-slide1.jpg"
                        },
                        new
                        {
                            Id = new Guid("734f3cd6-548b-41aa-9f2a-44939a008de0"),
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9404),
                            ProductId = new Guid("826f3115-6208-4188-b05e-c23e0f095cc4"),
                            Type = 2,
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(9405),
                            UrlImage = "https://example.com/images/xbox-series-s-content.jpg"
                        });
                });

            modelBuilder.Entity("TechShop.Core.Models.Specification", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Specifications");

                    b.HasData(
                        new
                        {
                            Id = new Guid("140cb12c-ba27-4e99-8d60-319711f1ecf1"),
                            CategoryId = new Guid("6d0dfc2c-f26f-4ec4-aab7-59079e5fe7c5"),
                            Name = "RAM"
                        },
                        new
                        {
                            Id = new Guid("15e46894-51de-4a26-a7db-346c8c4e8ecd"),
                            CategoryId = new Guid("6d0dfc2c-f26f-4ec4-aab7-59079e5fe7c5"),
                            Name = "Chip"
                        },
                        new
                        {
                            Id = new Guid("da651453-9c68-45c0-9d8b-010c045c8c4e"),
                            CategoryId = new Guid("80ff6f18-ea57-43f3-9b8d-226a4b002758"),
                            Name = "RAM"
                        },
                        new
                        {
                            Id = new Guid("2c2f27b1-6414-42f0-88ec-368551753894"),
                            CategoryId = new Guid("80ff6f18-ea57-43f3-9b8d-226a4b002758"),
                            Name = "Storage"
                        },
                        new
                        {
                            Id = new Guid("74b3b3a3-c8f1-4282-8e7e-7982269e1c18"),
                            CategoryId = new Guid("ad295af0-70e4-4a63-8e37-eeb960e8998e"),
                            Name = "Screen Size"
                        },
                        new
                        {
                            Id = new Guid("efce27b0-1d81-4cd6-b856-e0a283a6196a"),
                            CategoryId = new Guid("ad295af0-70e4-4a63-8e37-eeb960e8998e"),
                            Name = "Resolution"
                        },
                        new
                        {
                            Id = new Guid("763e8516-381a-4f94-91d2-77f40daa6758"),
                            CategoryId = new Guid("76f25b28-3096-4a32-9a3a-5646b720015f"),
                            Name = "Graphic Card"
                        },
                        new
                        {
                            Id = new Guid("4a692d63-5a1a-45fe-98f9-684cbbb627b1"),
                            CategoryId = new Guid("76f25b28-3096-4a32-9a3a-5646b720015f"),
                            Name = "Processor"
                        });
                });

            modelBuilder.Entity("TechShop.Core.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("BirthDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "bdf2f396-543a-4d69-ad81-e346218aec1e",
                            AccessFailedCount = 0,
                            Address = "123 Main St, New York, NY",
                            BirthDay = new DateTime(2001, 8, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "f565f0da-1fba-45e3-bc5d-8c6f3f27806f",
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 556, DateTimeKind.Local).AddTicks(6881),
                            Email = "phucnd20@fpt.com",
                            EmailConfirmed = false,
                            FullName = "Nguyen Duy Phuc",
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEJoxephNHqTUVBCmL4WoFY/7eJIRjZx23ilIJiRbvOXZZ/Y57KMTot+QvBZMqTSfRg==",
                            PhoneNumber = "1234567890",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6bdcc829-06c9-4340-bacd-100ccfbbd1b6",
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 556, DateTimeKind.Local).AddTicks(6890),
                            UserName = "phucnd20"
                        },
                        new
                        {
                            Id = "e1c5db55-de77-41c1-ab45-c022d32a2034",
                            AccessFailedCount = 0,
                            Address = "456 Elm St, Los Angeles, CA",
                            BirthDay = new DateTime(2003, 9, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "74a1e39c-3d36-4ff4-beec-4bc56b519849",
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 667, DateTimeKind.Local).AddTicks(604),
                            Email = "khanhtmq2@fpt.com",
                            EmailConfirmed = false,
                            FullName = "Tran Minh Quoc Khanh",
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEBBwhUyD9JMwUGvdm8Gfw1AaLxtgn5wZoCaajCY8vEfoEP0JkY6mxqAoocU5TjmLJw==",
                            PhoneNumber = "9876543210",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a7e55e9d-7178-4231-8897-245dd7909550",
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 667, DateTimeKind.Local).AddTicks(609),
                            UserName = "khanhtmq2"
                        },
                        new
                        {
                            Id = "dfda172b-27f8-44d5-aef4-d029719eeab7",
                            AccessFailedCount = 0,
                            Address = "789 Pine St, Chicago, IL",
                            BirthDay = new DateTime(2003, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "4eece4b4-79a3-4b86-b5f3-e9da05259f56",
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 755, DateTimeKind.Local).AddTicks(2207),
                            Email = "dattv20@fpt.com",
                            EmailConfirmed = false,
                            FullName = "Tran Van Dat",
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAENAcMywUzVdU2xVMkv+pJZl24vDOWbvdOBHFjsGjJpnL1j3HPgfQy6aQ62eIa5CA9w==",
                            PhoneNumber = "5551234567",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "30e6e46d-ab7f-47d7-93ce-484935c2d014",
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 755, DateTimeKind.Local).AddTicks(2214),
                            UserName = "dattv20"
                        },
                        new
                        {
                            Id = "dfd365b0-ed6c-4627-8d91-6f6488d301b1",
                            AccessFailedCount = 0,
                            Address = "101 Maple St, San Francisco, CA",
                            BirthDay = new DateTime(2002, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "dbb00183-195f-4d8a-a9bf-d9cab6ef1be2",
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 830, DateTimeKind.Local).AddTicks(4092),
                            Email = "nhannt96@fpt.com",
                            EmailConfirmed = false,
                            FullName = "Nguyen Tri Nhan",
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEGWgQ+WzO73fDEevdsJtBgcp/3iGEy7f/B6z2L/3LTlHCifDgWDryedBKF15uJ8IBA==",
                            PhoneNumber = "4449876543",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5e8160fc-de5a-42db-aacc-3f5dca9881ae",
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 830, DateTimeKind.Local).AddTicks(4100),
                            UserName = "nhannt96"
                        },
                        new
                        {
                            Id = "7954dd0b-fc37-488f-9f9b-cf64179fa2d9",
                            AccessFailedCount = 0,
                            Address = "202 Oak St, Miami, FL",
                            BirthDay = new DateTime(2003, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "90e3aa2a-8269-4e81-888b-935d51c77c3b",
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 904, DateTimeKind.Local).AddTicks(3977),
                            Email = "duclt24@fpt.com",
                            EmailConfirmed = false,
                            FullName = "Le Toan Duc",
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEC5MU6wKTX3m98sXSxIxFnzfDYGiQoDASllYspCBrSPcBSmJmhVjN5Vl0OBKnI2tfA==",
                            PhoneNumber = "3335678901",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "52e9bc06-f580-4d9c-85dc-e60cb9db39d9",
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 904, DateTimeKind.Local).AddTicks(3987),
                            UserName = "duclt24"
                        },
                        new
                        {
                            Id = "f7ab9962-24e9-43fa-b81d-af09531b6048",
                            AccessFailedCount = 0,
                            Address = "707 Cherry St, Phoenix, AZ",
                            BirthDay = new DateTime(2002, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "dd28d1c2-5682-4687-96c1-058ddab94d59",
                            CreatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(7795),
                            Email = "anhbhn@fpt.com",
                            EmailConfirmed = false,
                            FullName = "Bui Huynh Ngoc Anh",
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEBHMpwm80JxgWKVBJ+Ua1zM5q7kV5XiWnYktSlPwau3smXhDMPSegMxgRlUOkBeWLA==",
                            PhoneNumber = "8886785432",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ad60eae5-e262-4d26-be93-62351f3801ec",
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 26, 9, 41, 52, 978, DateTimeKind.Local).AddTicks(7805),
                            UserName = "anhbhn"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("TechShop.Core.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("TechShop.Core.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechShop.Core.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("TechShop.Core.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TechShop.Core.Models.Admin", b =>
                {
                    b.HasOne("TechShop.Core.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TechShop.Core.Models.Chat", b =>
                {
                    b.HasOne("TechShop.Core.Models.Collaborator", "Collaborator")
                        .WithMany()
                        .HasForeignKey("CollaboratorId");

                    b.HasOne("TechShop.Core.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.Navigation("Collaborator");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("TechShop.Core.Models.Collaborator", b =>
                {
                    b.HasOne("TechShop.Core.Models.Invoice", "Invoice")
                        .WithOne("Collaborator")
                        .HasForeignKey("TechShop.Core.Models.Collaborator", "InvoiceId");

                    b.HasOne("TechShop.Core.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("Invoice");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TechShop.Core.Models.Comment", b =>
                {
                    b.HasOne("TechShop.Core.Models.Product", "Product")
                        .WithMany("Comments")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TechShop.Core.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("TechShop.Core.Models.Comment", "UserReply")
                        .WithMany("UserReplies")
                        .HasForeignKey("UserReplyId");

                    b.Navigation("Product");

                    b.Navigation("User");

                    b.Navigation("UserReply");
                });

            modelBuilder.Entity("TechShop.Core.Models.Customer", b =>
                {
                    b.HasOne("TechShop.Core.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TechShop.Core.Models.Filter", b =>
                {
                    b.HasOne("TechShop.Core.Models.Category", "Category")
                        .WithMany("Filters")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TechShop.Core.Models.Specification", "Specification")
                        .WithMany("Filters")
                        .HasForeignKey("SpecificationId");

                    b.Navigation("Category");

                    b.Navigation("Specification");
                });

            modelBuilder.Entity("TechShop.Core.Models.Invoice", b =>
                {
                    b.HasOne("TechShop.Core.Models.Customer", "Customer")
                        .WithMany("Invoices")
                        .HasForeignKey("CustomerId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("TechShop.Core.Models.InvoiceProductColors", b =>
                {
                    b.HasOne("TechShop.Core.Models.Invoice", "Invoice")
                        .WithMany("InvoiceProducts")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechShop.Core.Models.ProductColor", "ProductColor")
                        .WithMany("InvoiceProducts")
                        .HasForeignKey("ProductColorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");

                    b.Navigation("ProductColor");
                });

            modelBuilder.Entity("TechShop.Core.Models.Message", b =>
                {
                    b.HasOne("TechShop.Core.Models.Chat", "Chat")
                        .WithMany("Messages")
                        .HasForeignKey("ChatId");

                    b.Navigation("Chat");
                });

            modelBuilder.Entity("TechShop.Core.Models.Order", b =>
                {
                    b.HasOne("TechShop.Core.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechShop.Core.Models.ProductColor", "ProductColor")
                        .WithMany("Orders")
                        .HasForeignKey("ProductColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechShop.Core.Models.Order", null)
                        .WithMany("Orders")
                        .HasForeignKey("OrderCustomerId", "OrderProductColorId");

                    b.Navigation("Customer");

                    b.Navigation("ProductColor");
                });

            modelBuilder.Entity("TechShop.Core.Models.Product", b =>
                {
                    b.HasOne("TechShop.Core.Models.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId");

                    b.HasOne("TechShop.Core.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Brand");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("TechShop.Core.Models.ProductColor", b =>
                {
                    b.HasOne("TechShop.Core.Models.ProductHardware", "ProductHardware")
                        .WithMany("ProductColors")
                        .HasForeignKey("ProductHardwareId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ProductHardware");
                });

            modelBuilder.Entity("TechShop.Core.Models.ProductFilter", b =>
                {
                    b.HasOne("TechShop.Core.Models.Filter", "Filter")
                        .WithMany("ProductFilters")
                        .HasForeignKey("FilterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TechShop.Core.Models.Product", "Product")
                        .WithMany("ProductFilters")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Filter");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("TechShop.Core.Models.ProductHardware", b =>
                {
                    b.HasOne("TechShop.Core.Models.Product", "Product")
                        .WithMany("ProductHardwares")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Product");
                });

            modelBuilder.Entity("TechShop.Core.Models.ProductImage", b =>
                {
                    b.HasOne("TechShop.Core.Models.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Product");
                });

            modelBuilder.Entity("TechShop.Core.Models.Specification", b =>
                {
                    b.HasOne("TechShop.Core.Models.Category", "Category")
                        .WithMany("Specifications")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("TechShop.Core.Models.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("TechShop.Core.Models.Category", b =>
                {
                    b.Navigation("Filters");

                    b.Navigation("Products");

                    b.Navigation("Specifications");
                });

            modelBuilder.Entity("TechShop.Core.Models.Chat", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("TechShop.Core.Models.Comment", b =>
                {
                    b.Navigation("UserReplies");
                });

            modelBuilder.Entity("TechShop.Core.Models.Customer", b =>
                {
                    b.Navigation("Invoices");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("TechShop.Core.Models.Filter", b =>
                {
                    b.Navigation("ProductFilters");
                });

            modelBuilder.Entity("TechShop.Core.Models.Invoice", b =>
                {
                    b.Navigation("Collaborator");

                    b.Navigation("InvoiceProducts");
                });

            modelBuilder.Entity("TechShop.Core.Models.Order", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("TechShop.Core.Models.Product", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Images");

                    b.Navigation("ProductFilters");

                    b.Navigation("ProductHardwares");
                });

            modelBuilder.Entity("TechShop.Core.Models.ProductColor", b =>
                {
                    b.Navigation("InvoiceProducts");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("TechShop.Core.Models.ProductHardware", b =>
                {
                    b.Navigation("ProductColors");
                });

            modelBuilder.Entity("TechShop.Core.Models.Specification", b =>
                {
                    b.Navigation("Filters");
                });
#pragma warning restore 612, 618
        }
    }
}
